// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: main.capnp

#include "main.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_d76106efb3ff757b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 117, 255, 179, 239,   6,  97, 215,
     11,   0,   0,   0,   1,   0,   1,   0,
    142, 230,  95,  12, 109,  30,  29, 205,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  83, 111,  99, 107,  65,
    100, 100, 114,  73, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114, 101, 115, 115,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d76106efb3ff757b = b_d76106efb3ff757b.words;
#if !CAPNP_LITE
static const uint16_t m_d76106efb3ff757b[] = {0, 1};
static const uint16_t i_d76106efb3ff757b[] = {0, 1};
const ::capnp::_::RawSchema s_d76106efb3ff757b = {
  0xd76106efb3ff757b, b_d76106efb3ff757b.words, 47, nullptr, m_d76106efb3ff757b,
  0, 2, i_d76106efb3ff757b, nullptr, nullptr, { &s_d76106efb3ff757b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_81d73a8dca0638eb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    235,  56,   6, 202, 141,  58, 215, 129,
     11,   0,   0,   0,   1,   0,   1,   0,
    142, 230,  95,  12, 109,  30,  29, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  83, 111,  99, 107,  65,
    100, 100, 114,  73, 110,  83, 105, 120,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114, 101, 115, 115,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81d73a8dca0638eb = b_81d73a8dca0638eb.words;
#if !CAPNP_LITE
static const uint16_t m_81d73a8dca0638eb[] = {0, 1};
static const uint16_t i_81d73a8dca0638eb[] = {0, 1};
const ::capnp::_::RawSchema s_81d73a8dca0638eb = {
  0x81d73a8dca0638eb, b_81d73a8dca0638eb.words, 48, nullptr, m_81d73a8dca0638eb,
  0, 2, i_81d73a8dca0638eb, nullptr, nullptr, { &s_81d73a8dca0638eb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<41> b_b472231a963d684c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     76, 104,  61, 150,  26,  35, 114, 180,
     11,   0,   0,   0,   1,   0,   1,   0,
    142, 230,  95,  12, 109,  30,  29, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    255, 123, 139,  97, 110, 248, 200, 204,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,   0, }
};
::capnp::word const* const bp_b472231a963d684c = b_b472231a963d684c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b472231a963d684c[] = {
  &s_ccc8f86e618b7bff,
};
static const uint16_t m_b472231a963d684c[] = {1, 0};
static const uint16_t i_b472231a963d684c[] = {0, 1};
const ::capnp::_::RawSchema s_b472231a963d684c = {
  0xb472231a963d684c, b_b472231a963d684c.words, 41, d_b472231a963d684c, m_b472231a963d684c,
  1, 2, i_b472231a963d684c, nullptr, nullptr, { &s_b472231a963d684c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_ccc8f86e618b7bff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255, 123, 139,  97, 110, 248, 200, 204,
     19,   0,   0,   0,   1,   0,   1,   0,
     76, 104,  61, 150,  26,  35, 114, 180,
      1,   0,   7,   0,   1,   0,   2,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,  46,  97, 100, 100, 114, 101,
    115, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  97, 100, 100, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    123, 117, 255, 179, 239,   6,  97, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  54,  97, 100, 100, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    235,  56,   6, 202, 141,  58, 215, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccc8f86e618b7bff = b_ccc8f86e618b7bff.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ccc8f86e618b7bff[] = {
  &s_81d73a8dca0638eb,
  &s_b472231a963d684c,
  &s_d76106efb3ff757b,
};
static const uint16_t m_ccc8f86e618b7bff[] = {1, 0};
static const uint16_t i_ccc8f86e618b7bff[] = {0, 1};
const ::capnp::_::RawSchema s_ccc8f86e618b7bff = {
  0xccc8f86e618b7bff, b_ccc8f86e618b7bff.words, 47, d_ccc8f86e618b7bff, m_ccc8f86e618b7bff,
  3, 2, i_ccc8f86e618b7bff, nullptr, nullptr, { &s_ccc8f86e618b7bff, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_fc686662c682f775 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117, 247, 130, 198,  98, 102, 104, 252,
     11,   0,   0,   0,   1,   0,   0,   0,
    142, 230,  95,  12, 109,  30,  29, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 115,  97,
    103, 101,  76, 105, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 115,  97, 103, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     76, 104,  61, 150,  26,  35, 114, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fc686662c682f775 = b_fc686662c682f775.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fc686662c682f775[] = {
  &s_b472231a963d684c,
};
static const uint16_t m_fc686662c682f775[] = {0};
static const uint16_t i_fc686662c682f775[] = {0};
const ::capnp::_::RawSchema s_fc686662c682f775 = {
  0xfc686662c682f775, b_fc686662c682f775.words, 37, d_fc686662c682f775, m_fc686662c682f775,
  1, 1, i_fc686662c682f775, nullptr, nullptr, { &s_fc686662c682f775, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SockAddrIn
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SockAddrIn::_capnpPrivate::dataWordSize;
constexpr uint16_t SockAddrIn::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SockAddrIn::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SockAddrIn::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SockAddrInSix
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SockAddrInSix::_capnpPrivate::dataWordSize;
constexpr uint16_t SockAddrInSix::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SockAddrInSix::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SockAddrInSix::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Message
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Message::Address
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Message::Address::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::Address::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Message::Address::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::Address::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// MessageList
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t MessageList::_capnpPrivate::dataWordSize;
constexpr uint16_t MessageList::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind MessageList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MessageList::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



